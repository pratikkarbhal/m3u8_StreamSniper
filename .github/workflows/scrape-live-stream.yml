name: Scrape Live Stream URL (mitmproxy)

on:
  workflow_dispatch:
    inputs:
      url:
        description: "The URL to scrape for m3u8 links"
        required: true
        default: "https://news.abplive.com/live-tv"

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Python/pip and mitmproxy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-pip
          python3 -m pip install --upgrade pip
          python3 -m pip install mitmproxy

      - name: Install Puppeteer
        run: |
          npm ci || true
          npm install puppeteer --no-audit --no-fund

      - name: Start mitmproxy (background)
        run: |
          # remove previous file if any
          rm -f captured_m3u8.txt mitm.log || true
          nohup mitmdump -s capture_m3u8.py -p 8080 > mitm.log 2>&1 &
          # give mitmproxy a moment to start
          sleep 2
          # print a short tail of mitm log for debug
          tail -n +1 mitm.log || true

      - name: Run Puppeteer script (with proxy)
        env:
          TARGET_URL: ${{ github.event.inputs.url }}
        run: |
          echo -e "\033[1;36mðŸŒ€ Running Puppeteer Script (mitmproxy) ... ðŸŒ€\033[0m"
          node puppeteer-with-mitm.js | tee puppeteer_output.txt

      - name: Show mitm log and captured URLs
        run: |
          echo -e "\n===== mitm.log (last 200 lines) ====="
          tail -n 200 mitm.log || true
          echo -e "\n===== captured_m3u8.txt ====="
          if [ -f captured_m3u8.txt ]; then cat captured_m3u8.txt; else echo "(no file)"; fi
          echo -e "\n===== puppeteer_output.txt ====="
          cat puppeteer_output.txt || true
